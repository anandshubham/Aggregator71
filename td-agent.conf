## Match the smtp tag specified by tail to
## kombine logs and send'em to ES
<match smtp>
	type elasticsearch
	hosts localhost
	port 9200
	logstash_format true
	logstash_prefix logstash-smtpdata
	logstash_dateformat %Y.%m.%d
	id_key queue_id
	type_name postfix
	flush_interval 35s
    buffer_chunk_limit 8m
    buffer_queue_limit 64
    buffer_queue_full_action block
    num_threads 2
</match>


## use a filter to change key names for
## elastic search index.
<filter candidates>
	@type transform
    enable_ruby true
	<record>
		email ${sEm}
		crnt_cmpny ${sCC}
		industry ${sCIT}
		exp_yrs ${sCJEx}
		exp_mon ${sCJExm}
		job_title ${sCTT}
		func_area ${sCFA}
		ann_slry ${sASN}
		tot_exp ${sEx}
		crnt_locat ${sCL}
		name ${sFLN}
		phone ${sCP}
		skill ${sS}
		skill_exp ${sSExp}
		hghst_qual ${sHQL}
		inst ${sHEIN}
		educ_stream ${sHES}
		gender ${sGM}
		reg_comp_dt ${sRD != ("" && nil) ? (sRD[0..9]) : sRD}
		last_modif ${sLM  != ("" && nil) ? (sLM[0..9]) : sLM}
		last_login ${sLH  != ("" && nil) ? (sLH[0..9]) : sLH}
		qulty_score ${sQS}
		email_vrfd ${sEV}
		phone_vrfd ${sCPV}
		email_alrt ${sEAS}
		private_profile ${sPS}
		mobile_alrt ${sMAS}
		spam ${sPSS}
		bounce ${sPBS}
		rcrtr_mail_stng ${sRPS}
		prfrd_locat ${sPLID}
        start_vendor ${svi}
        end_vendor ${evi}
        u_id ${id}
	</record>
    force_null ["reg_comp_dt", "last_login", "last_modif"]
	remove_keys sEm,sCC,sCIT,sCJEx,sCJExm,sCTT,sCFA,sASN,sEx,sCL,sFLN,sCP,sS,sSExp,sHQL,sHEIN,sHES,sGM,sRD,sLM,sQS,sEV,sCPV,sEAS,sPS,sMAS,sPSS,sPBS,sRPS,sPLID,sLH,svi,evi,id
</filter>

## Matches the tag candidates and sends
## the data to elasticsearch
<match candidates>
	type elasticsearch
	hosts localhost
	port 9200
	index_name logdata-solrdata
	type_name candidate
	id_key u_id
    flush_interval 35s    
    buffer_chunk_limit 8m    
    buffer_queue_limit 64
    buffer_queue_full_action block
    num_threads 2
</match>

#using filter to change fields of mailopen index
<filter trackmail>
    @type record_transformer
    enable_ruby
    <record>
        campdt ${( request.match(/[&?]utm_campdt[=](?<utm_campdt>.*?)(&|$)/) or Hash.new('') )[:utm_campdt]}
        email ${( request.match(/[&?]user_email[=](?<user_email>.*?)(&|$)/) or Hash.new('') )[:user_email].gsub('%40', '@')}
        medium ${( request.match(/[&?]utm_medium[=](?<utm_medium>.*?)(&|$)/) or Hash.new('') )[:utm_medium]}
        source ${( request.match(/[&?]utm_source[=](?<utm_source>.*?)(&|$)/) or Hash.new('') )[:utm_source]}
        campaign ${( request.match(/[&?]utm_camp[=](?<utm_camp>.*?)(&|$)/) or Hash.new('') )[:utm_camp]}
        u_id ${( request.match(/[&?]user_id[=](?<user_id>.*?)(&|$)/) or Hash.new('') )[:user_id]}
    </record>
    remove_keys rawrequest,request,httpversion
</filter>

## Matches the tag trackmail and sends
## the data to elasticsearch
<match trackmail>
	type elasticsearch
	hosts localhost
	port 9200
	logstash_format true
	logstash_prefix logstash-mailopens
	logstash_dateformat %Y.%m
	type_name mailopen
	time_key timestamp
    flush_interval 35s    
    buffer_chunk_limit 8m    
    buffer_queue_limit 64
    buffer_queue_full_action block
    num_threads 2
</match>

## Matches the tag accesslog and sends
## the data to elasticsearch
<match accesslog>
    @type rewrite_tag_filter

    ## Rewrite clicks
    rewriterule1 request tc=.* clicks

    ## Rewrite job applications
    rewriterule2 request ^/myshine/jobs/apply/\d+/$ apply.web
    rewriterule3 request ^/api.*/job-apply/.*$ apply.api
</match>

## Filter clicks
<filter clicks>
    @type record_transformer
    enable_ruby
    <record>
        campdt ${( ( ( request.match(/[&?]etm_content[=](?<etm_content>.*?)(&|$)/) or Hash.new('') )[:etm_content].gsub("%7C", "|").split("|")[2] or '' ).match(/(?<datepart>.*?)T(.*)/) or Hash.new('') )[:datepart].gsub(/-/, '')}
        email ${( ( request.match(/[&?]etm_content[=](?<etm_content>.*?)(&|$)/) or Hash.new('') )[:etm_content].gsub("%7C", "|").split("|")[3] or '' ).gsub('%40', '@')}
        medium ${( request.match(/[&?]utm_medium[=](?<utm_medium>.*?)(&|$)/) or Hash.new('') )[:utm_medium]}
        source ${( request.match(/[&?]utm_source[=](?<utm_source>.*?)(&|$)/) or Hash.new('') )[:utm_source]}
        campaign ${( request.match(/[&?]utm_campaign[=](?<utm_camp>.*?)(&|$)/) or Hash.new('') )[:utm_camp]}
        u_id ${( request.match(/[&?]user_id[=](?<user_id>.*?)(&|$)/) or Hash.new('') )[:user_id]}
        job_id ${( ( ( ( request.match(/[&?]etm_content[=](?<etm_content>.*?)(&|$)/) or Hash.new('') )[:etm_content].gsub("%7C", "|").split("|")[0] or '' ).match(/^(?<job_id>[0-9]+)$/) ) or Hash.new('') )[:job_id]}
    </record>
    remove_keys comblog,syslogbase,syslogtimestamp,facility,priority,pid,program,ident,auth,rawrequest,request,httpversion,bytes,referrer,agent,logsource
</filter>

## Filter applications
<filter apply.*>
    @type record_transformer
    enable_ruby
    <record>
        campdt ${( ( ( referrer.match(/[&?]etm_content[=](?<etm_content>.*?)(&|$)/) or Hash.new('') )[:etm_content].gsub("%7C", "|").split("|")[2] or '' ).match(/(?<datepart>.*?)T(.*)/) or Hash.new('') )[:datepart].gsub(/-/, '')}
        email ${( ( referrer.match(/[&?]etm_content[=](?<etm_content>.*?)(&|$)/) or Hash.new('') )[:etm_content].gsub("%7C", "|").split("|")[3] or '' ).gsub('%40', '@')}
        medium ${( referrer.match(/[&?]utm_medium[=](?<utm_medium>.*?)(&|$)/) or Hash.new('') )[:utm_medium]}
        source ${( referrer.match(/[&?]utm_source[=](?<utm_source>.*?)(&|$)/) or Hash.new('') )[:utm_source]}
        campaign ${( referrer.match(/[&?]utm_campaign[=](?<utm_camp>.*?)(&|$)/) or Hash.new('') )[:utm_camp]}
        u_id ${( referrer.match(/[&?]user_id[=](?<user_id>.*?)(&|$)/) or Hash.new('') )[:user_id]}
        job_id ${( ( ( ( referrer.match(/[&?]etm_content[=](?<etm_content>.*?)(&|$)/) or Hash.new('') )[:etm_content].gsub("%7C", "|").split("|")[0] or '' ).match(/^(?<job_id>[0-9]+)$/) ) or Hash.new('') )[:job_id]}
    </record>
    remove_keys comblog,syslogbase,syslogtimestamp,facility,priority,pid,program,ident,auth,rawrequest,request,httpversion,bytes,referrer,agent,logsource
</filter>

<match clicks>
    @type elasticsearch
    host localhost
    port 9200
    logstash_format true
    logstash_prefix logstash-clicks
    logstash_dateformat %Y.%m
    type_name click
    time_key timestamp
    flush_interval 35s    
    buffer_chunk_limit 8m    
    buffer_queue_limit 64
    buffer_queue_full_action block
    num_threads 2
</match>

<match apply.*>
    @type elasticsearch
    host localhost
    port 9200
    logstash_format true
    logstash_prefix logstash-applies
    logstash_dateformat %Y.%m
    type_name apply
    flush_interval 35s    
    buffer_chunk_limit 8m    
    buffer_queue_limit 64
    time_key timestamp
    buffer_queue_full_action block
    num_threads 2
</match>

<source>
    @type forward
    port 24224
</source>
